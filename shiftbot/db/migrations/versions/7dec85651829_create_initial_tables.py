"""create initial tables

Revision ID: 7dec85651829
Revises: 
Create Date: 2025-09-12 11:39:49.185018

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7dec85651829'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('messages',
    sa.Column('msg_id', sa.String(length=255), nullable=False),
    sa.Column('from_addr', sa.String(length=255), nullable=True),
    sa.Column('subject', sa.String(length=512), nullable=True),
    sa.Column('provider', sa.String(length=32), nullable=True),
    sa.Column('received_at_utc', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processed_at_utc', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('processed', 'parse_error', 'skipped', 'failed_upsert', name='message_status'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('msg_id', name=op.f('pk_messages'))
    )
    op.create_table('runs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('started_at_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('finished_at_utc', sa.DateTime(timezone=True), nullable=True),
    sa.Column('scanned', sa.Integer(), nullable=False),
    sa.Column('matched', sa.Integer(), nullable=False),
    sa.Column('parsed', sa.Integer(), nullable=False),
    sa.Column('upserted', sa.Integer(), nullable=False),
    sa.Column('skipped', sa.Integer(), nullable=False),
    sa.Column('failures', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_runs'))
    )
    op.create_index(op.f('ix_runs_started_at_utc'), 'runs', ['started_at_utc'], unique=False)
    op.create_table('attachments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('msg_id', sa.String(length=255), nullable=False),
    sa.Column('filename', sa.String(length=512), nullable=True),
    sa.Column('mime_type', sa.String(length=128), nullable=True),
    sa.Column('size_bytes', sa.Integer(), nullable=True),
    sa.Column('sha256', sa.String(length=64), nullable=False),
    sa.Column('validated', sa.Boolean(), nullable=False),
    sa.Column('stored_path', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['msg_id'], ['messages.msg_id'], name=op.f('fk_attachments_msg_id_messages'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_attachments'))
    )
    op.create_index(op.f('ix_attachments_msg_id'), 'attachments', ['msg_id'], unique=False)
    op.create_index(op.f('ix_attachments_sha256'), 'attachments', ['sha256'], unique=True)
    op.create_table('events',
    sa.Column('event_uid', sa.String(length=64), nullable=False),
    sa.Column('attachment_id', sa.Integer(), nullable=False),
    sa.Column('source_msg_id', sa.String(length=255), nullable=False),
    sa.Column('start_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('local_tz', sa.String(length=64), nullable=False),
    sa.Column('shift_type', sa.String(length=64), nullable=True),
    sa.Column('location', sa.String(length=128), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('checksum', sa.String(length=64), nullable=True),
    sa.Column('provider', sa.String(length=32), nullable=False),
    sa.Column('provider_event_id', sa.String(length=255), nullable=True),
    sa.Column('first_synced_at_utc', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_synced_at_utc', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('planned', 'synced', 'cancelled', name='event_status'), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('replaces_event_uid', sa.String(length=64), nullable=True),
    sa.CheckConstraint('end_utc > start_utc', name=op.f('ck_events_ck_events_end_after_start')),
    sa.ForeignKeyConstraint(['attachment_id'], ['attachments.id'], name=op.f('fk_events_attachment_id_attachments'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['source_msg_id'], ['messages.msg_id'], name=op.f('fk_events_source_msg_id_messages'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('event_uid', name=op.f('pk_events')),
    sa.UniqueConstraint('provider', 'provider_event_id', name='uq_events_provider_provider_event')
    )
    op.create_index(op.f('ix_events_attachment_id'), 'events', ['attachment_id'], unique=False)
    op.create_index(op.f('ix_events_provider_event_id'), 'events', ['provider_event_id'], unique=False)
    op.create_index(op.f('ix_events_replaces_event_uid'), 'events', ['replaces_event_uid'], unique=False)
    op.create_index(op.f('ix_events_source_msg_id'), 'events', ['source_msg_id'], unique=False)
    op.create_index(op.f('ix_events_start_utc'), 'events', ['start_utc'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_events_start_utc'), table_name='events')
    op.drop_index(op.f('ix_events_source_msg_id'), table_name='events')
    op.drop_index(op.f('ix_events_replaces_event_uid'), table_name='events')
    op.drop_index(op.f('ix_events_provider_event_id'), table_name='events')
    op.drop_index(op.f('ix_events_attachment_id'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_attachments_sha256'), table_name='attachments')
    op.drop_index(op.f('ix_attachments_msg_id'), table_name='attachments')
    op.drop_table('attachments')
    op.drop_index(op.f('ix_runs_started_at_utc'), table_name='runs')
    op.drop_table('runs')
    op.drop_table('messages')
    # ### end Alembic commands ###
